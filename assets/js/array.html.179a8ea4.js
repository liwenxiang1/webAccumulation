"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[999],{364:(a,n,s)=>{s.r(n),s.d(n,{comp:()=>o,data:()=>c});var e=s(641);const p=[(0,e.Fv)('<h1 id="数组-api-解析合集" tabindex="-1"><a class="header-anchor" href="#数组-api-解析合集"><span>数组 API 解析合集</span></a></h1><p>数组的使用场景非常多，平日中也涉及到很多数组的 api/相关操作，一直也没有对这块内容进行一块整理总结</p><h2 id="创建数组" tabindex="-1"><a class="header-anchor" href="#创建数组"><span>创建数组</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token comment">//构造器，实际上是new Array === Array,可以不加new</span>\n\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// []</span>\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// [,,]</span>\n<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//[1,2,3]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es6-array-of" tabindex="-1"><a class="header-anchor" href="#es6-array-of"><span>ES6 Array.of</span></a></h2><p>定义：返回由所有参数值组成的数组，如果没有参数，就返回一个空数组</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//[2]</span>\n<span class="token keyword">let</span> a <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//[1,2,3]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es6-array-from" tabindex="-1"><a class="header-anchor" href="#es6-array-from"><span>Es6 Array.from</span></a></h2><p>定义：将两类对象转换为真正的数组（不改变源对象，返回新数组） 参数：</p><ul><li>第一个参数（必须）：要转化成数组的对象</li><li>第二个参数（可选）：类似 map,对每个元素进行处理，将处理后的值放入数组</li><li>第三个参数（可选）：用来绑定 this</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;s&#39;</span> <span class="token punctuation">}</span>\n<span class="token keyword">let</span> arry <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">//[1,s]</span>\n\n<span class="token comment">//部署了Iterator接口的数据结构，比如字符串，Set、NodeList</span>\n<span class="token keyword">let</span> arry <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;he&#39;</span><span class="token punctuation">)</span> <span class="token comment">//[&#39;h&#39;,&#39;e&#39;]</span>\n<span class="token keyword">let</span> array <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[&#39;a&#39;,&#39;b&#39;]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',11)],t={},o=(0,s(262).A)(t,[["render",function(a,n){return(0,e.uX)(),(0,e.CE)("div",null,p)}]]),c=JSON.parse('{"path":"/accumulation/array.html","title":"数组 API 解析合集","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"创建数组","slug":"创建数组","link":"#创建数组","children":[]},{"level":2,"title":"ES6 Array.of","slug":"es6-array-of","link":"#es6-array-of","children":[]},{"level":2,"title":"Es6 Array.from","slug":"es6-array-from","link":"#es6-array-from","children":[]}],"git":{"updatedTime":1724144457000,"contributors":[{"name":"“liwx”","email":"“1258598654qq.com”","commits":2}]},"filePathRelative":"accumulation/array.md"}')}}]);