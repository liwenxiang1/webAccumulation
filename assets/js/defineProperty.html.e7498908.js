"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[5810],{9935:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>l});var e=a(641);const t=[(0,e.Fv)('<h1 id="object-defineproperty" tabindex="-1"><a class="header-anchor" href="#object-defineproperty"><span>Object.defineProperty</span></a></h1><p>Object.defineProperty 的作用就是直接在一个对象上定义一个新属性，或者修改一个属性。并返回该对象</p><h2 id="object-defineproperty-的参数" tabindex="-1"><a class="header-anchor" href="#object-defineproperty-的参数"><span>Object.defineProperty 的参数</span></a></h2><p>Object.defineProperty 需要三个参数</p><p><code>Object.defineProperty(obj,prop,desc)</code></p><ul><li>obj:需要定义属性的当前对象</li><li>prop:当前需要定义的属性名</li><li>desc:操作符 一般是一个对象</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token punctuation">{</span>\n\n    <span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;属性的值&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//控制是否可枚举，默认值是 false</span>\n    <span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//控制属性是否可以被修改，默认值微 false</span>\n    <span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//控制属性是否可以被删除，默认值微 false</span>\n\n <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="get-set-方法" tabindex="-1"><a class="header-anchor" href="#get-set-方法"><span>get/set 方法</span></a></h2><blockquote><p>get/set 设置时，不能同时设置 writable 和 value,会报错</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n\t<span class="token literal-property property">singer</span><span class="token operator">:</span> <span class="token string">&#39;周杰伦&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token string">&#39;青花瓷&#39;</span>\nObject<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;music&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t<span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 设置可枚举</span>\n\t<span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token comment">// 获取obj.music的时候就会调用get方法</span>\n\t\t<span class="token comment">// let value = &quot;强行设置get的返回值&quot;; // 打开注释 读取属性永远都是‘强行设置get的返回值’</span>\n\t\t<span class="token keyword">return</span> value\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token function">set</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token comment">// value = val; // 将修改的值重新赋给song</span>\n\t\tvalue <span class="token operator">=</span> <span class="token string">&#39;强行设置修改的值&#39;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>music<span class="token punctuation">)</span> <span class="token comment">// 青花瓷</span>\n<span class="token keyword">delete</span> obj<span class="token punctuation">.</span>music <span class="token comment">// 删除无效</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>music<span class="token punctuation">)</span> <span class="token comment">// 青花瓷</span>\nobj<span class="token punctuation">.</span>music <span class="token operator">=</span> <span class="token string">&#39;听妈妈的话&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>music<span class="token punctuation">)</span> <span class="token comment">// 强行设置修改的值</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// singer, music 上面设置了enumerable可枚举</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',10)],p={},o=(0,a(6262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,t)}]]),l=JSON.parse('{"path":"/accumulation/defineProperty.html","title":"Object.defineProperty","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Object.defineProperty 的参数","slug":"object-defineproperty-的参数","link":"#object-defineproperty-的参数","children":[]},{"level":2,"title":"get/set 方法","slug":"get-set-方法","link":"#get-set-方法","children":[]}],"git":{},"filePathRelative":"accumulation/defineProperty.md"}')}}]);