"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[5394],{6118:(t,e,i)=>{i.r(e),i.d(e,{comp:()=>r,data:()=>s});var n=i(641);const l=i.p+"assets/img/ic_unicloud_new.e7a711d4.png",d=[(0,n.Fv)('<h1 id="unicloud新用法" tabindex="-1"><a class="header-anchor" href="#unicloud新用法"><span>unicloud新用法</span></a></h1><p>从unicloud的官方demo中学到的知识点</p><h3 id="一、多表联查" tabindex="-1"><a class="header-anchor" href="#一、多表联查"><span>一、多表联查</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>async getOrder() {\n\t\t\t\tuni.showLoading({\n\t\t\t\t\tmask: true\n\t\t\t\t});\n\t\t\t\t// 客户端联表查询\n\t\t\t\treturn await db.collection(&#39;order,book&#39;) // 注意collection方法内需要传入所有用到的表名，用逗号分隔，主表需要放在第一位\n\t\t\t\t\t//.where(&#39;book_id.title == &quot;三国演义&quot;&#39;) // 查询order表内书名为“三国演义”的订单\n\t\t\t\t\t.field(&#39;book_id{title,author},quantity&#39;) // 这里联表查询book表返回book表内的title、book表内的author、order表内的quantity\n\t\t\t\t\t.get()\n\t\t\t\t\t.then(res =&gt; {\n\t\t\t\t\t\tthis.$refs.alertCode.open(res.result)\n\t\t\t\t\t\tconsole.log(res.result.data,&quot;111&quot;);\n\t\t\t\t\t\treturn res.result.data\n\t\t\t\t\t}).catch(err =&gt; {\n\t\t\t\t\t\tconsole.error(err)\n\t\t\t\t\t\treturn err\n\t\t\t\t\t}).finally(() =&gt; {\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t})\n\t\t\t}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、where条件的写法、结果的解构" tabindex="-1"><a class="header-anchor" href="#二、where条件的写法、结果的解构"><span>二、where条件的写法、结果的解构</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>let {result: {deleted}} = await testDb.where(&#39;data!=&quot;不存在的条件&quot;&#39;).remove();\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="'+l+'" alt="ic_unicloud_new"></p>',7)],a={},r=(0,i(6262).A)(a,[["render",function(t,e){return(0,n.uX)(),(0,n.CE)("div",null,d)}]]),s=JSON.parse('{"path":"/markdown/%E5%89%8D%E7%AB%AF/UniCloud/20210823%E6%96%B0%E5%A2%9E.html","title":"unicloud新用法","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"一、多表联查","slug":"一、多表联查","link":"#一、多表联查","children":[]},{"level":3,"title":"二、where条件的写法、结果的解构","slug":"二、where条件的写法、结果的解构","link":"#二、where条件的写法、结果的解构","children":[]}],"git":{},"filePathRelative":"markdown/前端/UniCloud/20210823新增.md"}')}}]);