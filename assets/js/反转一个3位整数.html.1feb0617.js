"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[6263],{4214:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var t=a(641);const p=[(0,t.Fv)('<h2 id="反转一个-3-位整数" tabindex="-1"><a class="header-anchor" href="#反转一个-3-位整数"><span><strong>反转一个 3 位整数</strong></span></a></h2><p><strong>描述：</strong></p><p>反转一个只有 3 位数的整数</p><p><strong>样例：</strong></p><p>123 反转之后是 321。 900 反转之后是 9。</p><p><strong>题目分析：</strong></p><ul><li>009 这种形式需要转为 9</li><li>最后输出的数字。</li></ul><p><strong>转数组操作:</strong></p><p>这是最简单，最容易想到的答案：</p><ol><li>数字转成字符串再转成数组</li><li>颠倒数组(翻转了),恢复成字符串</li><li>输出正常数字，这里用了+号。(用 parseInt 等也是可以的)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">reverseInteger</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">...</span>number<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>取余数，逐个颠倒</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">reverseInteger</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token function">parseInt</span><span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> _ <span class="token number">100</span> <span class="token operator">+</span>\n        <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>number <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span> _ <span class="token number">10</span> <span class="token operator">+</span>\n        <span class="token function">parseInt</span><span class="token punctuation">(</span>number <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>\\ <span class="token operator">*</span> <span class="token number">1</span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>通过取余操作，个位转百位，十位转十位，百位转个位。</strong></p><p>比如：123=&gt;300+20+1, 输出 321</p><p><strong>拼接字符串</strong>：</p><ul><li>数字转字符串</li><li>从后往前取对应位置字符, 拼接成一个颠倒的字符串</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">reverseInteger</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> str <span class="token operator">=</span> number<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 转字符</span>\n  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取对应位置字符，拼接成新的字符串</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',18)],e={},o=(0,a(6262).A)(e,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,p)}]]),c=JSON.parse('{"path":"/algorithm/simple/%E5%8F%8D%E8%BD%AC%E4%B8%80%E4%B8%AA3%E4%BD%8D%E6%95%B4%E6%95%B0.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"反转一个 3 位整数","slug":"反转一个-3-位整数","link":"#反转一个-3-位整数","children":[]}],"git":{},"filePathRelative":"algorithm/simple/反转一个3位整数.md"}')}}]);