"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[7883],{2160:(e,i,n)=>{n.r(i),n.d(i,{comp:()=>f,data:()=>h});var l=n(641);const d=n.p+"assets/img/uniapp在移动端打开pdf文件1.95f7dc50.png",s=n.p+"assets/img/uniapp在移动端打开pdf文件.298e5725.png",t=n.p+"assets/img/uniapp在移动端打开pdf文件2.3cc17f28.jpg",a=(0,l.Fv)('<h1 id="uniapp项目在移动端打开pdf文件" tabindex="-1"><a class="header-anchor" href="#uniapp项目在移动端打开pdf文件"><span>uniapp项目在移动端打开Pdf文件</span></a></h1><blockquote><p>在最新的vue项目-公众号中使用了<code>pdfh5</code>库加载pdf文件，效果也不错而且更加简单。</p><blockquote><p>唯一问题就是：在微信打开时pdf会有缓存，浏览器没问题，具体在uniapp项目中效果还没有测试。</p></blockquote></blockquote><ul><li>1.在package.json文件中依赖下面的库<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&quot;pdfh5&quot;: &quot;^1.4.2&quot;,\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>2.在页面中加入以下代码即可。<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>import Pdfh5 from &quot;pdfh5&quot;;\nimport &quot;pdfh5/css/pdfh5.css&quot;;\n\nconst initPdf = () =&gt; {\n  state.pdfh5 = new Pdfh5(&quot;#pdf-content&quot;, {\n    pdfurl: state.pdfUrl,\n    goto: 1,\n    // 设置每一页pdf上的水印\n    // logo: { src: require(&quot;@/assets/images/bus/icon_head@2x.png&quot;), x: 420, y: 700, width: 120, height: 120 },\n  });\n  state.pdfh5.scrollEnable(true); // 允许pdf滚动\n  // 监听pdf准备开始渲染，此时可以拿到pdf总页数\n  state.pdfh5.on(&quot;ready&quot;, function () {\n    console.log(&quot;总页数:&quot; + this.totalNum);\n  });\n  // 监听pdf加载完成事件，加载失败、渲染成功都会触发\n  state.pdfh5.on(&quot;complete&quot;, (status, msg, time) =&gt; {\n    console.log(&quot;状态:&quot; + status + &quot;，信息:&quot; + msg + &quot;，耗时:&quot; + time + &quot;毫秒&quot;);\n  });\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>在uniapp项目打包的移动端应用中要打开Pdf文件，看了一圈没有uniapp的官方插件， 社区的插件中也都是收费的。</p><p><img src="'+d+'" alt=""></p><p>之前做的<code>5+</code>项目中，前端vue项目中使用<code>vue-pdf</code>库打开pdf，将项目编译打包后 再使用<code>Hbuilder</code>将前端资源打包到App中也是可以正常打开Pdf的。</p><p>这里想着<code>uniapp</code>项目和<code>5+</code>项目还是有区别的就没有尝试，网上介绍的都是使用<code>pdf.js</code>库 打开Pdf文件，但是讲的不是很清楚。经过一些尝试，我这里使用<code>pdf.js</code>打开pdf文件成功了。</p><h3 id="一、使用步骤" tabindex="-1"><a class="header-anchor" href="#一、使用步骤"><span>一、使用步骤</span></a></h3>',8),u={href:"https://ask.dcloud.net.cn/article/13407",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.jianshu.com/p/71328fe9f9ce",target:"_blank",rel:"noopener noreferrer"},o=(0,l.Fv)('<p>结合上面的两个文档的内容，项目中使用<code>pdf.js</code>可以打开Pdf文件。</p><p><strong>项目结构如下：</strong><img src="'+s+'" alt=""></p><ul><li>1.在项目根目录创建<code>hybrid/html</code>目录，将<code>pdf.js</code>相关资源放到其目录下。 我将<code>hybrid</code>目录压缩到这里了，可以直接下载使用：<a href="../../image/front/hybrid.zip">hybrid.zip</a></li><li>2.注册<code>webview</code>页面，在其中使用<code>pdf.js</code>打开pdf文件逻辑。</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;template&gt;\n  &lt;view&gt;\n    &lt;web-view v-if=&quot;allUrl&quot; :src=&quot;allUrl&quot; :update-title=&#39;false&#39;&gt;&lt;/web-view&gt;\n  &lt;/view&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      viewerUrl: &#39;/hybrid/html/web/viewer.html&#39;,\n      allUrl: &#39;&#39;,\n      pdfUrl: &quot;&quot;,\n      title: &#39;&#39;,\n    }\n  },\n  onLoad(options) { //需要传入pdf文件的url\n    console.log(&quot;webview==========&quot;, options)\n    let {pdfUrl, title, show} = options\n    uni.setNavigationBarTitle({title: options.title})\n    // pdfUrl=&quot;http://mdej.impc.com.cn/hlwyy/business-ggfw/fileFeign/downloadFile?fileFullPath=/hlwyy/202305/10am/f1683680443628.pdf&quot;\n    this.pdfUrl = pdfUrl\n    this.title = options.title\n    this.loadPdf(this.pdfUrl, title)\n  },\n  methods: {\n    loadPdf(pdfUrl, title) {\n      /* #ifdef APP-PLUS */\n      switch (uni.getSystemInfoSync().platform) {\n        case &#39;android&#39;:\n          console.log(&quot;loadPdf&quot;, &#39;运行Android上&#39;);\n          this.loadPdfOnAndroid(pdfUrl)\n          break;\n        case &#39;ios&#39;:\n          console.log(&quot;loadPdf&quot;, &#39;运行iOS上&#39;);\n          this.loadPdfOnIos(pdfUrl)\n          break;\n        default:\n          console.log(&quot;loadPdf&quot;, &#39;运行在开发者工具上&#39;);\n          break;\n      }\n      /* #endif */\n      /* #ifdef H5 */\n      this.allUrl = pdfUrl\n      uni.setNavigationBarTitle({\n        title\n      })\n      /* #endif */\n    },\n    async loadPdfOnAndroid(pdfUrl) {\n      let tempFilePath = await this.downloadPdf(pdfUrl)\n      let localFilePath = plus.io.convertLocalFileSystemURL(tempFilePath)\n      console.log(&quot;downloadFile=======localFilePath&quot;, localFilePath)\n      this.allUrl = this.viewerUrl + &#39;?file=&#39; + encodeURIComponent(localFilePath)\n      console.log(&quot;downloadFile=======this.allUrl&quot;, this.allUrl)\n    },\n    async loadPdfOnIos(pdfUrl) {\n      let tempFilePath = await this.downloadPdf(pdfUrl)\n      uni.openDocument({\n        filePath: tempFilePath,\n        showMenu: true,\n        success: function (res) {\n          console.log(&#39;打开文档成功&#39;);\n        }\n      });\n    },\n    downloadPdf(pdfUrl) {\n      return new Promise(resolve =&gt; {\n        uni.downloadFile({\n          url: pdfUrl,\n          success: (res) =&gt; {\n            if (res.statusCode === 200) {\n              let tempFilePath = res.tempFilePath\n              uni.getFileInfo({\n                filePath: tempFilePath,\n                success: async imgInfo =&gt; {\n                  console.log(&quot;downloadPdf=======getFileInfo&quot;, imgInfo.size);\n                  if (imgInfo.size) return resolve(tempFilePath)\n                  else return resolve(await this.downloadPdf(pdfUrl))\n                }\n              })\n            }\n          },\n          async fail(err) {\n            return resolve(await this.downloadPdf(pdfUrl))\n          }\n        });\n      })\n    },\n    onNavigationBarButtonTap() {\n      var url = this.pdfUrl\n      var title = &#39;&#39;\n      let index = url.lastIndexOf(&quot;.&quot;)\n      let titleTwo = url.lastIndexOf(&quot;/&quot;)\n      title = this.title ? (this.title + url.substring(index, url.length)) : titleTwo\n      console.log(title, &#39;////&#39;);\n\n      let dtask = plus.downloader.createDownload(url, {\n            //本地路径开头使用file://，跟上手机文件本地目录storage/emulated/0，就是用户文件管理器能看到的了，之后我创建微垠作为文件夹，后缀是用于文件命名和格式修改，大家可以使用变量。\n            filename: &quot;file://storage/emulated/0/mdej/&quot; + title //利用保存路径，实现下载文件的重命名\n          },\n          function (d, status) {\n            //d为下载的文件对象\n            if (status == 200) {\n              //下载成功,d.filename是文件在保存在本地的相对路径，使用下面的API可转为平台绝对路径\n              let fileSaveUrl = plus.io.convertLocalFileSystemURL(d.filename);\n              plus.runtime.openFile(d.filename); //选择软件打开文件\n              uni.showToast({\n                title: &#39;文件保存路径&#39; + d.filename,\n                icon: &#39;none&#39;,\n                duration: 6000,\n              })\n            } else {\n              //下载失败\n              plus.downloader.clear(); //清除下载任务\n            }\n          })\n      dtask.start();\n    }\n  }\n}\n&lt;/script&gt;  \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3.在其他页面打开pdf文件时，携带<code>pdfUrl</code>参数跳转到<code>webview</code>页面即可。<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>this.$tools.pageGo(&quot;/pages/common/webview/webview?pdfUrl=&quot; + &quot;[pdf地址]&quot;+&quot;&amp;title=&quot;+&quot;[title文本]&quot;)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>4.如果在加载pdf后要下载pdf文件的话，可以在标题栏后边显示下载按钮。<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>在pages.json文件中配置标题栏右边的下载按钮，通过上面的onNavigationBarButtonTap方法实现下载功能\n{\n    &quot;path&quot;: &quot;pages/common/webview/webview&quot;,\n    &quot;style&quot;: {\n        &quot;navigationBarTitleText&quot;: &quot;&quot;,\n        &quot;enablePullDownRefresh&quot;: false,\n        &quot;app-plus&quot;: {\n            &quot;titleNView&quot;: {\n                &quot;buttons&quot;: [{\n                    &quot;text&quot;: &quot;下载&quot;,\n                    &quot;fontSrc&quot;: &quot;./static/iconfont/iconfont.ttf&quot;,\n                    &quot;fontSize&quot;: &quot;28rpx&quot;,\n                    &quot;width&quot;: &quot;80rpx&quot;,\n                    &quot;z-index&quot;:999\n                }]\n            }\n        }\n    }\n},\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="二、代码讲解" tabindex="-1"><a class="header-anchor" href="#二、代码讲解"><span>二、代码讲解</span></a></h3><p>这里对于<code>webview</code>使用<code>pdf.js</code>实现打开pdf文件的原理不研究。</p><p>至于将<code>/hybrid/html</code>目录更换成其他目录是否可以成功还需要自行测试。</p>',8),r={href:"https://ask.dcloud.net.cn/article/13407",target:"_blank",rel:"noopener noreferrer"},c=(0,l.Lk)("code",null,"pdf",-1),m=(0,l.Lk)("code",null,"/hybrid/html/web/viewer.html?file=",-1),p=(0,l.Fv)('<p>这里的思路就是：</p><ul><li>1.下载<code>pdf</code>文件到本地，得到<code>tempFilePath</code>临时路径</li><li>2.使用<code>plus.io.convertLocalFileSystemURL</code>方法转换成本地路径<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>let localFilePath = plus.io.convertLocalFileSystemURL(tempFilePath)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>3.使用<code>webview</code>加载<code>pdf.js页面路径及本地pdf文件路径</code>即可。</li></ul><p><strong>打开效果：</strong><img src="'+t+'" alt=""></p>',3),b={},f=(0,n(6262).A)(b,[["render",function(e,i){const n=(0,l.g2)("ExternalLinkIcon");return(0,l.uX)(),(0,l.CE)("div",null,[a,(0,l.Lk)("p",null,[(0,l.eW)("相关参考："),(0,l.Lk)("a",u,[(0,l.eW)("uniapp-pdf.js使用总结"),(0,l.bF)(n)]),(0,l.eW)("、"),(0,l.Lk)("a",v,[(0,l.eW)("uniapp使用pdf.js(base64)"),(0,l.bF)(n)])]),o,(0,l.Lk)("p",null,[(0,l.eW)("在"),(0,l.Lk)("a",r,[(0,l.eW)("uniapp-pdf.js使用总结"),(0,l.bF)(n)]),(0,l.eW)("这篇文档中介绍了打开pdf的几种方式， 其中有打开本地"),c,(0,l.eW)("文件的方法。 但是需要传入"),m,(0,l.eW)("中的文件路径为本地文件路径。")]),p])}]]),h=JSON.parse('{"path":"/markdown/%E5%89%8D%E7%AB%AF/uniapp/uniapp%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%93%E5%BC%80pdf%E6%96%87%E4%BB%B6.html","title":"uniapp项目在移动端打开Pdf文件","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"一、使用步骤","slug":"一、使用步骤","link":"#一、使用步骤","children":[]},{"level":3,"title":"二、代码讲解","slug":"二、代码讲解","link":"#二、代码讲解","children":[]}],"git":{},"filePathRelative":"markdown/前端/uniapp/uniapp在移动端打开pdf文件.md"}')}}]);