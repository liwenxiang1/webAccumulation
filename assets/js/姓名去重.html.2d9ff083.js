"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[6116],{3973:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>c});var t=a(641);const e=[(0,t.Fv)('<h2 id="姓名去重" tabindex="-1"><a class="header-anchor" href="#姓名去重"><span><strong>姓名去重</strong></span></a></h2><h3 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span><strong>描述</strong></span></a></h3><p>给一串名字，将他们去重之后返回。两个名字重复是说在忽略大小写的情况下是一样的。</p><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span><strong>说明：</strong></span></a></h3><p>你可以假设名字只包含大小写字母和空格。</p><h3 id="样例" tabindex="-1"><a class="header-anchor" href="#样例"><span><strong>样例：</strong></span></a></h3><p>给出：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>\n  <span class="token string">&#39;James&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;james&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Bill Gates&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;bill Gates&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;HELLO WORLD&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Helloworld&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&#39;james&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bill gates&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;helloworld&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="题目分析" tabindex="-1"><a class="header-anchor" href="#题目分析"><span><strong>题目分析：</strong></span></a></h3><p>思路就是：去重和转小写</p><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span><strong>code:</strong></span></a></h3><p>题目基本就像下面这样解了，其他的不过是循环的方法，去重的方法不同，事实上都大同小异。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">nameDeduplication</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">names</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  names<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    names<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 全部转小写</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 去重</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再讲一个坑吧：</p><p>题目描述的时候说是输出是这样的：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&#39;james&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bill gates&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;helloworld&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当我把代码提交之后，告诉我，期望答案是这样的：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&#39;bill gates&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;helloworld&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;james&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一般来说不会这么坑：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 我在后面加了一个 sort 方法就符合他们的预期答案了。。</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="题目比较简单-就不放代码-上面就是-了。" tabindex="-1"><a class="header-anchor" href="#题目比较简单-就不放代码-上面就是-了。"><span>题目比较简单，就不放代码(上面就是)了。</span></a></h3>',23)],p={},l=(0,a(6262).A)(p,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,e)}]]),c=JSON.parse('{"path":"/algorithm/simple/%E5%A7%93%E5%90%8D%E5%8E%BB%E9%87%8D.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"姓名去重","slug":"姓名去重","link":"#姓名去重","children":[{"level":3,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":3,"title":"说明：","slug":"说明","link":"#说明","children":[]},{"level":3,"title":"样例：","slug":"样例","link":"#样例","children":[]},{"level":3,"title":"题目分析：","slug":"题目分析","link":"#题目分析","children":[]},{"level":3,"title":"code:","slug":"code","link":"#code","children":[]},{"level":3,"title":"题目比较简单，就不放代码(上面就是)了。","slug":"题目比较简单-就不放代码-上面就是-了。","link":"#题目比较简单-就不放代码-上面就是-了。","children":[]}]}],"git":{},"filePathRelative":"algorithm/simple/姓名去重.md"}')}}]);