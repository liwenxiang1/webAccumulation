"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[7519],{8198:(e,i,n)=>{n.r(i),n.d(i,{comp:()=>h,data:()=>p});var s=n(641);const l=n.p+"assets/img/Gatt蓝牙数据传输.06c1898b.png",t=(0,s.Fv)('<h1 id="nativejs使用gatt方式连接蓝牙" tabindex="-1"><a class="header-anchor" href="#nativejs使用gatt方式连接蓝牙"><span>NativeJs使用Gatt方式连接蓝牙</span></a></h1><ul><li>1.因为要在<code>Android手机</code>使用<code>NativeJs</code>代码进行测试蓝牙功能</li><li>2.而且这个<code>NativeJs</code>是需要有<code>Android</code>相应的原生插件的支持的</li><li>3.而<code>uniapp</code>项目运行到手机的原生代码正好是有这个原生插件功能的支持的。</li></ul><p>基于以上的原因，项目是使用<code>uniapp</code>框架的项目上进行开发调试的。</p>',3),d={href:"https://gitee.com/zyjun/bluetooth-h5",target:"_blank",rel:"noopener noreferrer"},a={href:"https://gitee.com/zyjun/bluetooth",target:"_blank",rel:"noopener noreferrer"},r=(0,s.Lk)("p",null,[(0,s.Lk)("strong",null,"主要流程：")],-1),u=(0,s.Lk)("ul",null,[(0,s.Lk)("li",null,"1.连接蓝牙"),(0,s.Lk)("li",null,"2.蓝牙数据传输")],-1),v=(0,s.Lk)("h3",{id:"一、连接蓝牙核心代码",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#一、连接蓝牙核心代码"},[(0,s.Lk)("span",null,"一、连接蓝牙核心代码")])],-1),c={href:"https://gitee.com/zyjun/bluetooth-h5",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Lk)("code",null,"pages/plus/blue-utils.js",-1),b=(0,s.Fv)('<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>class BlueUtils {\n    constructor() {...}\n\n    canBlueToothUse(){//蓝牙硬件是否可用\n        1.判断当前设备是否支持蓝牙，支持蓝牙则走下面的逻辑！\n        this.blueToothError = await this.openLocationPermission()\n        这里就可以使用await接收到【申请权限方法】的同步结果。\n        2.判断定位权限是否存在，不存在则去请求权限，存在则走下面的逻辑！\n        3.判断蓝牙功能是否打开，没打开则去申请打开，打开则走下面的逻辑！\n        4.上面的功能在不满足的情况下就提示错误信息，并返回false结果。\n    }\n\n    //这个方法的作用就是统一日志输出。正常情况下只需要传入fn方法名及e有用信息两个参数即可\n    //如果在【Promise】对象中使用时，先输出console日志，然后再通过【resolve】方法将【e有用信息】回调到【Promise】对象中。\n    promiseBackSuccess(fn, e, back = null) {\n      console.log(fn + &quot;---success&quot;, e)\n      if (back) back(e)\n    }\n\n    //上面的方法在这里有使用，目的就是在【Promise】中先输出日志，然后再将结果返回去。\n    openLocationPermission() {//申请定位权限\n      return new Promise((resolve, reject) =&gt; {\n        plus.android.requestPermissions([&#39;android.permission.ACCESS_FINE_LOCATION&#39;],\n            e =&gt; {\n              if (e.deniedAlways.length &gt; 0) this.promiseBackFail(&quot;requestPermissions_ACCESS_FINE_LOCATION&quot;, &quot;定位权限被拒绝！&quot;, reject)\n              if (e.deniedPresent.length &gt; 0) this.promiseBackFail(&quot;requestPermissions_ACCESS_FINE_LOCATION&quot;, &quot;定位权限被拒绝！&quot;, reject)\n              if (e.granted.length &gt; 0) this.promiseBackSuccess(&quot;requestPermissions_ACCESS_FINE_LOCATION&quot;, &quot;&quot;, resolve)\n            },\n            err =&gt; {\n              this.showToast(&quot;申请权限出错！&quot;)\n              this.promiseBackFail(&quot;requestPermissions_ACCESS_FINE_LOCATION&quot;, JSON.stringify(err), reject)\n            });\n      })\n    }\n    \n    //开启蓝牙扫描-连接方法\n    startBluetoothDevicesDiscovery(){\n        //1.判断蓝牙功能是否可用，不可用去申请相关权限或提示错误信息\n        let blueToothUse = await this.canBlueToothUse()\n        if (!blueToothUse) return\n        //2.以下都是调用【plus的蓝牙扫描、扫描监听、连接方法】的完整流程\n        this.listenBlueToothAdapter()【扫描监听放在扫描的前面】\n        let openRes = await this.openBlueTooth()\n        let startDisRes = await this.startDiscovery()\n    }\n    \n    listenBlueToothAdapter(){\n        plus.bluetooth.onBluetoothDeviceFound(e =&gt; {\n            if (deviceObj.deviceId == this.deviceId) {\n                this.connectDevice(success=&gt; //扫描到目标蓝牙，进行连接操作\n                    this.getServices(success=&gt; //sccess：连接成功，获取蓝牙服务\n                        if (services.length &gt; 0) {//success:获取服务成功，并且服务存在：\n                          this.listenValueChange(success=&gt;\n                            //到这里才是真正意义上的连接上蓝牙  \n                            this.readValueListener()//监听蓝牙返回的数据\n                          )\n                          this.clearServiceTimer()\n                        }\n                    )\n                )\n            }\n        })\n    }\n    \n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一、蓝牙数据传输流程" tabindex="-1"><a class="header-anchor" href="#一、蓝牙数据传输流程"><span>一、蓝牙数据传输流程</span></a></h3><p><img src="'+l+'" alt=""></p>',3),m={},h=(0,n(6262).A)(m,[["render",function(e,i){const n=(0,s.g2)("ExternalLinkIcon");return(0,s.uX)(),(0,s.CE)("div",null,[t,(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,[(0,s.eW)("项目地址："),(0,s.Lk)("a",d,[(0,s.eW)("bluetooth-h5"),(0,s.bF)(n)])])]),(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,[(0,s.eW)("相关项目："),(0,s.Lk)("a",a,[(0,s.eW)("bluetooth-android"),(0,s.bF)(n)])])]),r,u,v,(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,[(0,s.eW)("代码位置："),(0,s.Lk)("a",c,[(0,s.eW)("bluetooth-h5"),(0,s.bF)(n)]),(0,s.eW)("项目-"),o])]),b])}]]),p=JSON.parse('{"path":"/markdown/%E5%89%8D%E7%AB%AF/%E8%B0%83%E7%A0%94%E6%B5%8B%E8%AF%95/NativeJs%E8%93%9D%E7%89%99Gatt%E8%BF%9E%E6%8E%A5.html","title":"NativeJs使用Gatt方式连接蓝牙","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"一、连接蓝牙核心代码","slug":"一、连接蓝牙核心代码","link":"#一、连接蓝牙核心代码","children":[]},{"level":3,"title":"一、蓝牙数据传输流程","slug":"一、蓝牙数据传输流程","link":"#一、蓝牙数据传输流程","children":[]}],"git":{},"filePathRelative":"markdown/前端/调研测试/NativeJs蓝牙Gatt连接.md"}')}}]);