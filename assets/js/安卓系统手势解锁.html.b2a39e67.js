"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[4388],{5957:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>i});var p=a(641);const t=(0,p.Lk)("h2",{id:"安卓系统手势解锁",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#安卓系统手势解锁"},[(0,p.Lk)("span",null,[(0,p.Lk)("strong",null,"安卓系统手势解锁")])])],-1),e={href:"https://leetcode.cn/problems/android-unlock-patterns/",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Fv)('<h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码：</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">m</span>\n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>\n * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>\n */</span>\n<span class="token comment">// 回溯</span>\n<span class="token keyword">var</span> <span class="token function-variable function">numberOfPatterns</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 两个点之间必须要经过的点</span>\n  <span class="token keyword">let</span> <span class="token constant">S</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;1 3&#39;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;4 6&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;7 9&#39;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;1 7&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;2 8&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;3 9&#39;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;1 9&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;3 7&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;3 1&#39;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;6 4&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;9 7&#39;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;7 1&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;8 2&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;9 3&#39;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;9 1&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;7 3&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment">// 最小连接数量和最大连接数量</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> m<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">helper</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token doc-comment comment">/**\n   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span> 已连接多少点\n   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">l</span> 当前出发点\n   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">s</span> 之前连接点的字符\n   */</span>\n  <span class="token keyword">function</span> <span class="token function">helper</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>result <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 连接的点够了 增加一种方案</span>\n    <span class="token comment">// 从1开始 每个点都作为起始点</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> k <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>\n        <span class="token comment">// 当前点是否连接过 连接过不操作</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 是否需要经过中间的点</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">S</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 在s中找到中间点 继续从i连接的点出发</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token constant">S</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">helper</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> s <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 没找到中间点不操作 回溯 说明不能连接这两个点</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 不经过 回溯 从连接的点再出发</span>\n            <span class="token function">helper</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> s <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 连接上初始点</span>\n        <span class="token function">helper</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> s <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),c={},l=(0,a(6262).A)(c,[["render",function(n,s){const a=(0,p.g2)("ExternalLinkIcon");return(0,p.uX)(),(0,p.CE)("div",null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("题目链接"),(0,p.bF)(a)])]),o])}]]),i=JSON.parse('{"path":"/algorithm/middle/%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安卓系统手势解锁","slug":"安卓系统手势解锁","link":"#安卓系统手势解锁","children":[{"level":3,"title":"代码：","slug":"代码","link":"#代码","children":[]}]}],"git":{"updatedTime":1724144871000,"contributors":[{"name":"“liwx”","email":"“1258598654qq.com”","commits":1}]},"filePathRelative":"algorithm/middle/安卓系统手势解锁.md"}')}}]);