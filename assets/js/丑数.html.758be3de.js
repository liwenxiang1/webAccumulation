"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[49],{1913:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var p=a(641);const t=[(0,p.Fv)('<h2 id="丑数" tabindex="-1"><a class="header-anchor" href="#丑数"><span><strong>丑数</strong></span></a></h2><h3 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述：</span></a></h3><p>设计一个算法，找出只含素因子 <code>2，3，5</code> 的第 <code>n</code> 小的数。</p><p>符合条件的数如：<code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12...</code></p><h3 id="样例" tabindex="-1"><a class="header-anchor" href="#样例"><span>样例：</span></a></h3><p>如果 <code>n = 9</code>， 返回 <code>10</code></p><h3 id="思路分析" tabindex="-1"><a class="header-anchor" href="#思路分析"><span>思路分析：</span></a></h3><p>这类题目就是找规律，找到规律就好写了。</p><p>我再提供多一些数据：<code>[1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24]</code></p><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码：</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24]</span>\n<span class="token keyword">const</span> <span class="token function-variable function">nthUglyNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> min<span class="token punctuation">,</span>\n    nex2<span class="token punctuation">,</span>\n    nex3<span class="token punctuation">,</span>\n    nex5<span class="token punctuation">,</span>\n    i2 <span class="token operator">=</span> <span class="token punctuation">(</span>i3 <span class="token operator">=</span> i5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 除了第一个数，每个数都是2、3、5的倍数，把它们的倍数找出来，数字较小添加进去</span>\n    nex2 <span class="token operator">=</span> arr<span class="token punctuation">[</span>i2<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    nex3 <span class="token operator">=</span> arr<span class="token punctuation">[</span>i3<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">;</span>\n    nex5 <span class="token operator">=</span> arr<span class="token punctuation">[</span>i5<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>nex2<span class="token punctuation">,</span> nex3<span class="token punctuation">,</span> nex5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 增加他们的倍数 为下次计算做准备</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">===</span> nex2<span class="token punctuation">)</span> i2<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> nex3<span class="token punctuation">)</span> i3<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> nex5<span class="token punctuation">)</span> i5<span class="token operator">++</span><span class="token punctuation">;</span>\n    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// return arr</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;输出&#39;</span><span class="token punctuation">,</span> <span class="token function">nthUglyNumber</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">nthUglyNumber</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',11)],e={},o=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,t)}]]),c=JSON.parse('{"path":"/algorithm/middle/%E4%B8%91%E6%95%B0.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"丑数","slug":"丑数","link":"#丑数","children":[{"level":3,"title":"描述：","slug":"描述","link":"#描述","children":[]},{"level":3,"title":"样例：","slug":"样例","link":"#样例","children":[]},{"level":3,"title":"思路分析：","slug":"思路分析","link":"#思路分析","children":[]},{"level":3,"title":"代码：","slug":"代码","link":"#代码","children":[]}]}],"git":{"updatedTime":1724144871000,"contributors":[{"name":"“liwx”","email":"“1258598654qq.com”","commits":1}]},"filePathRelative":"algorithm/middle/丑数.md"}')}}]);