"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[17],{1421:(l,t,a)=>{a.r(t),a.d(t,{comp:()=>s,data:()=>i});var e=a(641);const n=[(0,e.Lk)("h1",{id:"val-let-和-const",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#val-let-和-const"},[(0,e.Lk)("span",null,"val let 和 const")])],-1),(0,e.Lk)("p",null,"let 和 const 是 ES6 新特性，用于声明变量",-1),(0,e.Lk)("h2",{id:"let-、const-与-val-的区别",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#let-、const-与-val-的区别"},[(0,e.Lk)("span",null,"let 、const 与 val 的区别")])],-1),(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"let 为块级作用域 仅在其所在的代码块内生效"),(0,e.Lk)("li",null,"不存在变量提升 不会被提升到作用域的顶部，只有在声明之后再能内使用"),(0,e.Lk)("li",null,"暂时性死区"),(0,e.Lk)("li",null,"不能重复声明 不能声明重复的变量，var 可以，后者覆盖前者")],-1)],c={},s=(0,a(6262).A)(c,[["render",function(l,t){return(0,e.uX)(),(0,e.CE)("div",null,n)}]]),i=JSON.parse('{"path":"/accumulation/val.html","title":"val let 和 const","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"let 、const 与 val 的区别","slug":"let-、const-与-val-的区别","link":"#let-、const-与-val-的区别","children":[]}],"git":{"updatedTime":1709731854000,"contributors":[{"name":"“liwx”","email":"“1258598654qq.com”","commits":1}]},"filePathRelative":"accumulation/val.md"}')}}]);