"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[5818],{9858:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var t=a(641);const p=[(0,t.Fv)('<h2 id="数组中的最长单词" tabindex="-1"><a class="header-anchor" href="#数组中的最长单词"><span><strong>数组中的最长单词</strong></span></a></h2><p><strong>描述：</strong></p><p>给一个数组，找出其中所有最长的单词。</p><h3 id="样例" tabindex="-1"><a class="header-anchor" href="#样例"><span><strong>样例：</strong></span></a></h3><ol><li></li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;google&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;facebook&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;internationalization&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blabla&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最长的单词集合为 <code>[&quot;internationalization&quot;]</code> 2.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;love&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yes&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最长的单词集合为 <code>[&quot;like&quot;, &quot;love&quot;, &quot;hate&quot;]</code></p><h3 id="思路分析" tabindex="-1"><a class="header-anchor" href="#思路分析"><span><strong>思路分析：</strong></span></a></h3><p>主要要注意一下第二个栗子中描述的情况，建议保存当前字符最大的长度，然后及时更新。</p><h3 id="代码模板" tabindex="-1"><a class="header-anchor" href="#代码模板"><span><strong>代码模板：</strong></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Solution</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span><strong>代码：</strong></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Solution</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 保存最长单词的数组</span>\n    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 字符串最大长度</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 当前值的长度 超过或等于 最大字符串长度</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> store<span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>length <span class="token operator">===</span> store<span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 长度一样 将值添加进去</span>\n        <span class="token keyword">return</span> store<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 退出循环</span>\n      <span class="token punctuation">}</span>\n      store<span class="token punctuation">.</span>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 最大值比之前的大，清空原数组</span>\n      store<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加到数组</span>\n      store<span class="token punctuation">.</span>max <span class="token operator">=</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 更新最大值</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> store<span class="token punctuation">.</span>arr<span class="token punctuation">;</span> <span class="token comment">// 返回数组</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> data1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;love&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hate&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> data2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;google&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;facebook&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;internationalization&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blabla&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Solution</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Solution</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',15)],e={},o=(0,a(6262).A)(e,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,p)}]]),c=JSON.parse('{"path":"/algorithm/simple/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"数组中的最长单词","slug":"数组中的最长单词","link":"#数组中的最长单词","children":[{"level":3,"title":"样例：","slug":"样例","link":"#样例","children":[]},{"level":3,"title":"思路分析：","slug":"思路分析","link":"#思路分析","children":[]},{"level":3,"title":"代码模板：","slug":"代码模板","link":"#代码模板","children":[]},{"level":3,"title":"代码：","slug":"代码","link":"#代码","children":[]}]}],"git":{},"filePathRelative":"algorithm/simple/数组中的最长单词.md"}')}}]);