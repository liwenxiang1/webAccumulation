"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[636],{3680:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>i});var t=a(641);const e=(0,t.Lk)("h2",{id:"盛最多水的容器",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#盛最多水的容器"},[(0,t.Lk)("span",null,[(0,t.Lk)("strong",null,"盛最多水的容器")])])],-1),p={href:"https://leetcode.cn/problems/container-with-most-water",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Fv)('<h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码：</span></a></h3><ul><li>暴力法</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">maxArea</span><span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> total <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 双循环 每个木板都跟其他木板匹配一次</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 两个木板的高度</span>\n      <span class="token keyword">const</span> height1 <span class="token operator">=</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> height2 <span class="token operator">=</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token comment">// 获取最小高度</span>\n      <span class="token keyword">const</span> heightNum <span class="token operator">=</span> height1 <span class="token operator">&gt;</span> height2 <span class="token operator">?</span> height2 <span class="token operator">:</span> height1<span class="token punctuation">;</span> <span class="token comment">// 取木板最小的那个值</span>\n      <span class="token keyword">const</span> lengthNum <span class="token operator">=</span> j <span class="token operator">-</span> i<span class="token punctuation">;</span> <span class="token comment">// 底部的长度</span>\n      <span class="token keyword">const</span> size <span class="token operator">=</span> heightNum <span class="token operator">*</span> lengthNum<span class="token punctuation">;</span> <span class="token comment">// 当前两块木板的面积</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        max <span class="token operator">=</span> size<span class="token punctuation">;</span> <span class="token comment">// 最大面积</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> max<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>双指针: 滑窗</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxArea</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//左下标</span>\n  <span class="token keyword">let</span> right <span class="token operator">=</span> height<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//右下标</span>\n  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//最大装水量</span>\n  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当前水量</span>\n    max <span class="token operator">=</span> now <span class="token operator">&gt;</span> max <span class="token operator">?</span> now <span class="token operator">:</span> max<span class="token punctuation">;</span> <span class="token comment">// 更新最大水量</span>\n    <span class="token comment">// 窗口缩小思路</span>\n    <span class="token comment">// 从数组左右两侧开始，判定两者的大小，以较小的一侧为滑动边界；</span>\n    <span class="token comment">// 如果滑动边界向内收缩一位的值比之前的值要小，那么继续滑动，这时候的面积肯定是逐渐减小的；</span>\n    <span class="token comment">// 当出现滑动边界的值比之前的大了，那么就需要重新判断下左右边界的大小，进行一次新的操作；</span>\n    <span class="token comment">// 最终会找到一个窗口的最大值 遍历一次 O(n)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>height<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&gt;</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      right<span class="token operator">--</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      left<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),c={},l=(0,a(6262).A)(c,[["render",function(n,s){const a=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[e,(0,t.Lk)("p",null,[(0,t.Lk)("a",p,[(0,t.eW)("题目链接"),(0,t.bF)(a)])]),o])}]]),i=JSON.parse('{"path":"/algorithm/middle/%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"盛最多水的容器","slug":"盛最多水的容器","link":"#盛最多水的容器","children":[{"level":3,"title":"代码：","slug":"代码","link":"#代码","children":[]}]}],"git":{"updatedTime":1724144871000,"contributors":[{"name":"“liwx”","email":"“1258598654qq.com”","commits":1}]},"filePathRelative":"algorithm/middle/盛最多水的容器.md"}')}}]);