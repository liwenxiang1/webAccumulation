"use strict";(self.webpackChunkliwx_docs=self.webpackChunkliwx_docs||[]).push([[9399],{5871:(e,i,n)=>{n.r(i),n.d(i,{comp:()=>a,data:()=>t});var s=n(641);const l=[(0,s.Fv)('<h1 id="uniapp前端使用uqrcode生成二维码带文字的图片" tabindex="-1"><a class="header-anchor" href="#uniapp前端使用uqrcode生成二维码带文字的图片"><span>uniapp前端使用uQRCode生成二维码带文字的图片</span></a></h1><p>在<code>uniapp</code>中使用<code>uqrcode</code>库生成二维码图片的时候发现：可以生成样式较多的二维码并生成图片，但是不能带上文字。 所以有了这篇文档的说明。</p><p><strong>整体思路说明：</strong></p><blockquote><p>使用<code>uqrcode</code>先生成二维码并下载二维码图片，再使用<code>canvas</code>绘制二维码图片和文字信息，最后使用<code>canvas</code>的保存图片方法将图片保存下来。</p></blockquote><h3 id="一、关于页面显示说明" tabindex="-1"><a class="header-anchor" href="#一、关于页面显示说明"><span>一、关于页面显示说明</span></a></h3><p>页面正常显示的是<code>uqrcode</code>组件生成的二维码 + 文本信息</p><p>实际在下载二维码+文字图片的时候是使用一个隐藏的<code>canvas</code>来执行的。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>//实际显示的布局\n&lt;uqrcode ref=&quot;uqrcode&quot; class=&quot;qrcode-view&quot; canvas-id=&quot;qrcode&quot; :value=&quot;tgInfo.apkPathTg&quot;\n               :options=&quot;qrcodeOption&quot;&gt;&lt;/uqrcode&gt;\n&lt;view v-if=&quot;tgInfo.tgm&quot; class=&quot;tgm-code-view&quot;&gt;{{ tgInfo.tgm }}\n      \n//实际生成二维码的canvas元素\n&lt;canvas canvas-id=&quot;mutilCanvas&quot; style=&quot;width: 200px; height: 220px;visibility: hidden;&quot;&gt;&lt;/canvas&gt;      \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、具体的下载带文字的二维码图片的逻辑" tabindex="-1"><a class="header-anchor" href="#二、具体的下载带文字的二维码图片的逻辑"><span>二、具体的下载带文字的二维码图片的逻辑</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># 第一步：先使用uqrcode生成二维码图片\ndownloadApkWithCodeImage() {\n  this.$refs.uqrcode.toTempFilePath({\n    success: res =&gt; {\n      console.log(&quot;downloadApkImage&quot;, res);\n      this.addMutilImage(res)\n    }\n  });\n},\n# 第二步：使用mutilCanvas绘制二维码图片和文字\naddMutilImage(image) {\n  this.mutilContext = uni.createCanvasContext(&#39;mutilCanvas&#39;)\n  this.mutilContext.setFillStyle(&#39;white&#39;)\n  this.mutilContext.fillRect(0, 0, 200, 220)\n\n  this.mutilContext.drawImage(image.tempFilePath, 0, 0, 200, 200, 0, 0, 200, 200)\n  this.mutilContext.setFontSize(20)\n  this.mutilContext.setFillStyle(&#39;#FF0000&#39;)\n  this.mutilContext.setTextBaseline(&#39;top&#39;)\n  this.mutilContext.fillText(this.tgInfo.tgm, 80, 200)\n  // this.mutilContext.fillText(&#39;邀请码：421D&#39;, 40, 200)\n\n  this.mutilContext.restore()\n  this.mutilContext.draw(false, callback =&gt; {\n    this.saveImageToAlbum()\n  })\n},      \n# 第三步：uni.canvasToTempFilePath方法将mutilCanvas的内容生成图片保存到相册\nsaveImageToAlbum() {\n  //保存图片到相册\n  uni.canvasToTempFilePath({\n    canvasId: &#39;mutilCanvas&#39;,\n    destWidth: 200,\n    destHeight: 220,\n    quality: 1,\n    success: (res) =&gt; {\n      // console.log(res.tempFilePath)\n      uni.saveImageToPhotosAlbum({\n        filePath: res.tempFilePath,\n        success: res =&gt; {\n          console.log(&quot;saveImageToPhotosAlbum&quot;, res);\n          uni.showToast({\n            icon: &#39;success&#39;,\n            title: &#39;保存成功&#39;\n          });\n        },\n        fail: err =&gt; {\n          // console.log(err);\n        }\n      });\n    }\n  });\n},\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',10)],d={},a=(0,n(6262).A)(d,[["render",function(e,i){return(0,s.uX)(),(0,s.CE)("div",null,l)}]]),t=JSON.parse('{"path":"/markdown/%E5%89%8D%E7%AB%AF/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/uniapp%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8uQRCode%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%B8%A6%E6%96%87%E5%AD%97.html","title":"uniapp前端使用uQRCode生成二维码带文字的图片","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"一、关于页面显示说明","slug":"一、关于页面显示说明","link":"#一、关于页面显示说明","children":[]},{"level":3,"title":"二、具体的下载带文字的二维码图片的逻辑","slug":"二、具体的下载带文字的二维码图片的逻辑","link":"#二、具体的下载带文字的二维码图片的逻辑","children":[]}],"git":{},"filePathRelative":"markdown/前端/第三方库/uniapp前端使用uQRCode生成二维码带文字.md"}')}}]);